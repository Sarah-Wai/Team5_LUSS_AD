
@{
    ViewData["Title"] = "Department Head Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Team5_LUSS.Models.ViewModels.TopSixRequested> highestRequestCat = (List<Team5_LUSS.Models.ViewModels.TopSixRequested>)ViewData["highestRequestCat"];
    
}
<!-- START: Breadcrumbs-->
    <div class="container-fluid site-width">
        <div class="row ">
            <div class="col-12  align-self-center">
                <div class="sub-header mt-3 py-3 align-self-center d-sm-flex w-100 rounded">
                    <div class="w-sm-100 mr-auto"><h4 class="mb-0">Welcome @User</h4></div>


                </div>
            </div>
        </div>

        <div class="row">

            <!-- Request Breakdown Chart-->
            <div class="col-12 col-md-6 mt-3">
                <div class="card">

                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h6 class="card-title">Request Breakdown<br>(This Year)</h6>
                        <a href="http://www.google.com">
                            <div class="btn-group mb-2">
                                <button type="button" class="btn btn-outline-info">Pending: Count</button>
                            </div>
                        </a>
                    </div>
                    <div class="card-body">
                        <div id="requestBreakdown" class="height-300"></div>
                    </div>
                </div>
            </div>


            <!-- Category Pie Chart-->
            <div class="col-12 col-md-6 mt-3">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h6 class="card-title">Top 5 Cost by Category<br>(This Year)</h6>
                    </div>
                    <div class="card-body">
                        <div id="catCostChart" class="height-300"></div>
                    </div>
                </div>
            </div>



            <!-- Department Cost Chart-->
            <div class="col-12 mt-3">

                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h6 class="card-title">Department Cost Year-on-Year</h6>
                        <div class="form-group col-sm-4 mb-3">
                            <label for="month">Current month :</label>
                            <input type="month" class="form-control" id="month">
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="deptCostChart" class="height-500"></div>
                    </div>
                </div>
            </div>


        </div>






    </div>
    <!-- END: Card DATA-->
<script src="~/vendors/echarts/echarts.min.js"></script>
<script>
    (function ($) {
        "use strict";

        var primarycolor = getComputedStyle(document.body).getPropertyValue('--primarycolor');
        var bordercolor = getComputedStyle(document.body).getPropertyValue('--bordercolor');
        var bodycolor = getComputedStyle(document.body).getPropertyValue('--bodycolor');




        var deptCostChart = echarts.init(document.getElementById('deptCostChart'));
        // specify chart configuration item and data

        var deptCostChartoption = {
            color: ['navy', 'teal'],
            legend: {
                textStyle: {
                    color: bodycolor
                }
            },
            tooltip: {},
            dataset: {
                source: [
                    ['product', '2019', '2020'],
                    ['Jan', 3532, 5324],
                    ['Feb', 1512, 8125],
                    ['Mar', 4123, 3185],
                    ['Apr', 2443, 1185],
                    ['May', 4123, 1485],
                    ['Jun', 1243, 1185],
                    ['Jul', 3243, 8125],
                    ['Aug', 1843, 345],
                    ['Sep', 2143, 1285],
                    ['Oct', 2343, 1785],
                    ['Nov', 7243, 1485],
                    ['Dec', 1243, 485]
                ]
            },
            textStyle: {
                color: bodycolor
            },
            xAxis: {
                type: 'category',
                axisLine: {
                    lineStyle: {
                        color: bordercolor
                    }
                }
            },
            yAxis: {
                axisLine: {
                    lineStyle: {
                        color: bordercolor
                    }
                },
                splitLine: {
                    lineStyle: {
                        color: bordercolor
                    }
                }
            },
            // Declare several bar series, each will be mapped
            // to a column of dataset.source by default.
            series: [
                {
                    type: 'bar',
                    barGap: 0,
                    label: {
                        color: bodycolor
                    }
                },
                {
                    type: 'bar',
                    label: {
                        color: bodycolor
                    }
                },

            ]
        };
        // use configuration item and data specified to show chart
        deptCostChart.setOption(deptCostChartoption);

        var requestBreakdown = echarts.init(document.getElementById('requestBreakdown'));
        // specify chart configuration item and data
        var requestBreakdownoption = {
            tooltip: {
                trigger: 'item',
                formatter: "{a} <br/>{b}: {c} ({d}%)"
            },
            legend: {
                orient: 'vertical',
                x: 'left',
                textStyle: {
                    color: bodycolor
                }
            },
            series: [
                {
                    name: 'Category',
                    type: 'pie',
                    radius: ['40%', '70%'],
                    avoidLabelOverlap: false,
                    label: {
                        normal: {
                            show: false,
                            position: 'center'
                        },
                        emphasis: {
                            show: true,
                            textStyle: {
                                fontSize: '15',
                                fontWeight: 'bold'
                            }
                        }
                    },
                    labelLine: {
                        normal: {
                            show: false
                        }
                    },
                    
                }
            ]
        };
        // use configuration item and data specified to show chart
        requestBreakdown.setOption(requestBreakdownoption);


        var catCostChart = echarts.init(document.getElementById('catCostChart'));
        // specify chart configuration item and data
        var catCostChartoption = {
            tooltip: {
                trigger: 'item',
                formatter: "{a} <br/>{b}: {c} ({d}%)"
            },
            legend: {
                orient: 'vertical',
                x: 'left',
                textStyle: {
                    color: bodycolor
                }
            },
            series: [
                {
                    name: 'Category',
                    type: 'pie',
                    radius: ['40%', '70%'],
                    avoidLabelOverlap: false,
                    label: {
                        normal: {
                            show: false,
                            position: 'center'
                        },
                        emphasis: {
                            show: true,
                            textStyle: {
                                fontSize: '15',
                                fontWeight: 'bold'
                            }
                        }
                    },
                    labelLine: {
                        normal: {
                            show: false
                        }
                    },
                    data: [
                        @foreach (var hrc in highestRequestCat)
                        {
                            <text>{ value: '@hrc.TotalPrice', name: '@hrc.ItemName' }, </text>
                        }

                    ]
                }
            ]
        };
        // use configuration item and data specified to show chart
        catCostChart.setOption(catCostChartoption);




        $(window).on('resize', function () {



            if (deptCostChart != null && deptCostChart != undefined) {
                deptCostChart.resize();
            }
            if (requestBreakdown != null && requestBreakdown != undefined) {
                requestBreakdown.resize();
            }
            if (catCostChart != null && catCostChart != undefined) {
                catCostChart.resize();
            }

        });

    })(jQuery);</script>
<script src="~/vendors/echarts/echarts.min.js"></script>
<!-- END: Card DATA-->     