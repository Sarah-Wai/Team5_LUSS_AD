<!--Nang Sandar: Index Homa page for Item Catalogue Page-->

@using Microsoft.AspNetCore.Http;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IEnumerable<Item>;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Index";
    var Items = (List<Item>)ViewData["items"];
    var Categories = (List<ItemCategory>)ViewData["itemCatList"];

    string username = (string)Context.Session.GetString("User");
    int DeptId = (int)Context.Session.GetInt32("DeptId");
    string UserRole = (string)Context.Session.GetString("UserRole");


}

@if (UserRole == "dept_employee" || UserRole == "dept_rep")
{


    <!--SearchBar-->
    <div clss="row" style="padding-top:10px;">
        <div class="col-12 mt-3 d-flex">
            <div class="col-md-6 col-lg-6">
                <h3>Item List</h3>
            </div>
            <div class="col-md-6 col-lg-6 d-flex">
                <div class="col-md-5 col-lg-5">
                    @Html.DropDownList("SelectedCategory", (Categories).Select(m => new SelectListItem
               { Text = m.CategoryName, Value = Convert.ToString(m.CategoryID) }),
                    new { @class = "btn btn-outline-info ddlCat", onchange = @"searchAtn()" })
                </div>
                <div class="col-md-5 col-lg-5">
                    <input type="text" class="form-control" id="searchName" name="search">
                </div>
                <div class="col-md-2 col-lg-2">
                    <button type="button" id="btnSearch" onclick="searchNameFn()" class="btn btn-outline-info rounded-btn">Search</button>
                </div>

            </div>

        </div>
    </div>







        <div class="row">

            <div class="col-12 mt-3">

                <div class="card">
                    <div class="card-body">
                        <div class="row">

                            <!-- item loop -->
                            @foreach (var item in Model)
                            {
                                string img = "/images/itemImgs/" + item.ItemCode + ".jpg";
                                string qtyclassname = "qty" + item.ItemID;
                                string itemname = "item" + item.ItemID;
                                var maxQty = item.InStockQty;
                                bool isLowStock = false;
                                if (item.InStockQty < item.ReStockLevel)
                                {
                                    isLowStock = true;
                                }
                                else
                                {
                                    isLowStock = false;
                                }
                                <div class="col-md-6 col-lg-3 mb-4">
                                    <div class="item-wrapper">
                                        <div class="position-relative item-img-wrapper">
                                            @if (isLowStock)
                                            {
                                                <span class="lowstock-badge badge badge-pill badge-warning p-2 mb-1">Low stock</span>
                                            }
                                            <img src=@img alt="" class="img-fluid item-img">

                                        </div>
                                        <div class="pt-3 item-desc-wrapper">
                                            <p class="mb-2"><a href="#" class="font-weight-bold text-primary" id=@itemname>@item.ItemName</a></p>

                                            <div class="def-number-input number-input safari_only">
                                                <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()" class="minus"></button>
                                                <input class=@qtyclassname min="1" max=@maxQty name="quantity" value="1" type="number">
                                                <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()" class="plus"></button>
                                            </div>
                                            <div class="btn-group mb-2">
                                                <button type="button" class="btn btn-outline-info rounded-btn" onclick="addToCart(@item.ItemID)">Add</button>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            }

                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div clss="row">
            <div class="col-12 mt-3 col-md-12 col-lg-12">
                <div class="col-md-6 col-lg-6">

                </div>
                <!--Pagination - Start-->
                <div class="col-md-6 col-lg-6" style="margin:auto;">
                    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
                    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
                    {
                        DisplayItemSliceAndTotal = true,
                        ContainerDivClasses = new[] { "navigation" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" },
                    })
                </div>
                <!--Pagination - End-->
            </div>

        </div>
 }
    <!--use ajax for dropdownList to get the item data then talk to controller-->
    @section Scripts{

        <script>
       //setting auto default '0' inside Session
        $(document).ready(function () {
            //get selected category value from session to show seleced category when page reload after search
            var selectedCat = '@Context.Session.GetString("selectedCat")';
            $(".ddlCat").val(selectedCat);

            //Toaster customize option
            toastr.options = {
                tapToDismiss: true,
                toastClass: 'toast',
                containerId: 'toast-container',
                iconClass: 'toast-info',
                positionClass: 'toast-top-right',
                timeOut: 500, // Set timeOut to 0 to make it sticky
                titleClass: 'toast-title',
                messageClass: 'toast-message'
            }

            //to fix pagination style
            $('ul.pagination > li.disabled > a').addClass('page-link');

        });
        $('#searchName').keypress(keypressHandler);
        function keypressHandler(e) {
            if (e.which == 13) {
                e.preventDefault();
                $(this).blur();
                $('#btnSearch').focus().click();
            }
        }
        var addToCart = function (id) {

            var itemId = id;
            var qty = $('.qty' + itemId).val();
            var itemname = $('#item' + itemId).html();
            console.log()
             $.ajax({
                    type: "GET",
                    url: '@Url.Action("AddToCart", "ItemList")',
                    data: { itemId, qty },
                     success: function (result) {
                         $('.qty' + itemId).val(1);
                         toastr["success"](itemname + " is successfully added to cart.");
                         var url = '@Url.Action("PartialViewCart","ItemList")';
                         $("#cartpartial").load(url);

                        // $("#cartpartial").load('ItemList/PartialViewCart');
                        }
                })
        }
        //get id and name from search bar using ajax
        var searchNameFn = function () {
            var name = $("#searchName").val();
            var id = $("#SelectedCategory").val();
            console.log(name);
            console.log(id);
            if (name) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("FindByCatIDAndName", "ItemList")',
                    contentType: 'application/json',
                    data: { id, name },
                    success: function (result) {
                        location.reload();
                    }
                })
            } else {
                searchAtn();
            }
        }
        //get itemID from dropdownList
        var searchAtn = function() {
            var id = $("#SelectedCategory").val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("FindByCat", "ItemList")',
            contentType: 'application/json',
            data: { id },
            success: function (result) {
                location.reload();
            }
         })
     }

        </script>

    }